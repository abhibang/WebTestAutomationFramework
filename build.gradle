import groovy.io.FileType 

plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.22"
}

group 'webtestautomationframework'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5', transitive: true
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5', transitive: true
    compile group: 'io.appium', name: 'java-client', version: '7.1.0', transitive: true
    compile group: 'junit', name: 'junit', version: '4.11', transitive: false
    compile group: 'log4j', name: 'log4j', version: '1.2.16', transitive: false
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7', transitive: false
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2', transitive: false
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task cleanTarget{
    delete 'target'
    project.file('target').mkdirs()
}

test {
    maxParallelForks = 2
    forkEvery = 1
    systemProperty "file.encoding", "UTF-8"
    test.testLogging.showStandardStreams = false
    minHeapSize = "128m"
    maxHeapSize = "512m"
}


cucumberReports {
    outputDir = file('target/output/generated-reports')
    def dir = new File("target")
    FileCollection collection = files { dir.listFiles()}
    dir.traverse(type: FileType.FILES, nameFilter: ~/.*\.json/) {collection}
    reports = collection
}

//gradle -S -i clean cleanTarget test generateCucumberReports -b build.gradle